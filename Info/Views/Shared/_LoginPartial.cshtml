@using Microsoft.AspNetCore.Identity
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle text-dark" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                <span class="mx-3">@UserManager.GetUserAsync(User).Result.FirstName </span>
                <img src="~/photo/mini/@((UserManager.GetUserAsync(User).Result.Photo != null) ? UserManager.GetUserAsync(User).Result.Photo : "user.png")" width="30" alt="Fotografia autora" class="rounded-circle">
            </a>
            <ul class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
                <li class="nav-item"><a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Profile">Profil</a></li>
                <li class="nav-item"><a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/ChangePassword">Zmiana hasła</a></li>
            </ul>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Wyloguj</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Rejestracja</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Logowanie</a>
    </li>
}
</ul>
